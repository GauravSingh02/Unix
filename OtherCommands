journalctl is a powerful command-line utility in Linux that allows you to query and view logs from the systemd journal. The systemd journal is a centralized logging system that collects and stores log messages from various services, daemons, and the kernel.

journalctl  ==> view all the logs
journalctl -u ==> view logs for specific service

Redirecting output
date > fileanme or date 1> filename ==> overwrite the file
date >> filename --> append the file

# Use the cat command, and redirection, to add (append) the contents of /home/bob/file.txt to /home/bob/destination.txt
$ cat /home/bob/file.txt >> /home/bob/destination.txt

stdin (<)==> Standard Input
stdout (1>)==> Standard Output
stderr (2>)==> Standard Error

# Execute /home/bob/script.sh script and save all errors only in /home/bob/output_errors.txt file
$ ./script.sh 2> /home/bob/output_errors.txt

2>&1 ==> stdout & stderror will capture in diff-2 respectively 

# Execute /home/bob/script.sh script and save all command output (both errors/warnings and normal output) in /home/bob/output.txt file
$ ./script.sh > /home/bob/output.txt 2>&1

both "heredoc" and "here string" are used for input redirection, allowing you to pass input to commands in various ways. They are particularly useful when you need to provide multiple lines of input or strings to a command

heredoc and here string
sort <<EOF

b >>>1+2+3
6


SSH is more secure than Telnet (highly insecure)

command --help  ( faster inputs) 
ls --help ### will provide more details ls command
man ls  (detailed inputs)

#Copy the output of the sshd.service status to /home/bob/service.txt.
$ sudo systemctl status sshd.service > service.txt

####### ps command ######

# To get "full" information about each process.
$ ps -f 

# If You're typically interested in Full information about all the processes running on the system
$ ps -ef

$ ps auxw 

The a argument means "show all processes", not just my processes. (There's a bit more to it than that, but this is usually close enough.)
The u argument adds "user information" columns to the output. (Try your ps command without the 'u', and you'll see a major difference in the columns that are displayed.)
The x lifts the BSD-style "must have a tty" restriction, meaning it will show processes that are not associated with a terminal (tty)>
The w means "wide output". Use this option twice for unlimited width.

ps -ef | grep mysql

Zoombie process | It refers to a process that has completed its execution but still has an entry in the process table because its exit status hasn't been collected by its parent process yet.

ps -e -o pid,ppid,state,command | grep -w Z

 ### Top Command 
 
 Linux Top Command Shortcuts:

top then c = shows commands absolute path
top then k = kill a process by PID
top then n = to change the no. of task displayed
top then d, s = to change interval of refresh
top then M  = To sort the Linux running process by memory usage
top then r = you can change the nice value of a PID
top then u = to filter task by user
top then f = Field Management ( know more about all the columns )
top then h = help
top then z or b = Toggle: 'z' color/mono; 'b' bold/reverse (only if 'x' or 'y')
top then x y = 'x' sort field; 'y' running tasks
top then i = process which some memory usage

# Process Tree
$ ps -ejH httpd


# To show the active jobs
$ jobs (  ) ### post sleep command you can see entry

# To resume job background or forground
bg %Job_id
fg %job_id

# Run a command to sleep for 3000 seconds and make sure its running in the background
$ sleep 3000 &

nice value ( -20 to 19 ) 
19 is lowest and -20 is highest priorty of job

# how to change the priority 
nice -n -10 /home/gasingh/echo.sh

# how to check the nice value  
ps -l process_id

# How do we see all processes running on the system, along with their nice values?
$ ps lax 

# Assign a nice value of 9 to the sshd process.
$ sudo renice 9 {pid}

# List all files that are opened by process with PID 1, this process is owned by the root user. Save the output in /home/bob/files.txt file.
$ sudo lsof -p 1 > /home/bob/files.txt
 or ps -p 1 

# All the process run by user Gaurav
$ ps -U gaurav 

# Identify the PID of the process named rpcbind and save its value in /home/bob/pid.txt file
$ pgrep rpcbind > /home/bob/pid.txt

# When a process receives a SIGHUP(Signal hang up) signal, it typically indicates that the terminal or connection that the process was associated with is no longer available or has been closed
 For example
$ sudo kill -SIGHUP {pid}  ==> here we're sending hang-up signal to pid

kill -9 {pid} ==> here we're sending kill signal which is equivalent to 9 ~ SIGKILL 

$ kill -L ==> All listing of signal to process 

# Using ps command, identify the CPU and Memory usage by only the process having PID 1 and save the entire command output in /home/bob/resources.txt file.
$ ps u 1 > /home/bob/resources.txt

#nohup (if you want process to keep running post terminal is logout )
$ nohup ./echo.sh &

#It'll create nohup.out by default which contain ouput of the commands

# Sticky bit ( Restriction deletion flag )
When the sticky bit is set on a directory, only the owner of a file or directory within that directory (or the root user) can delete or rename the file, even if other users have write permissions on the directory.
and it applies to directories and has no effect on regular files.

##### df & DU command #######

$ df -h ( human readable format )

## Disk Utlization 
$ du -h 

$ du -ah ( all files in human readable format )
$ du -sh ## here s is sumarise option 
## to know path details of echo command 

## Free ## Free Memory space
free 

$ uptime
17:24:55 up 32 min, 1 user, load average: 0.05, 0.05, 0.01   # load average on CPU sec, min, hr 

$ type -a echo ( 

## test command 

# Stat command will tell access, modify and Change time
$ state myfile.txt

# How to create Hidden file (add dot(.) while creating it
 $ touch .file.txt 

## Sending output to /dev/null is often used to suppress unnecessary or verbose messages from commands or scripts.
If you want to run a command silently without displaying any output, you can redirect the output to /dev/null.
# grep â€“r '^The' /etc/ 2>/dev/null  ### There won't be any error now

Unix booted.
Program Unix(kernel) is booted into main memory, and remains active till the computer is shut down
Program init runs as a background task and remains running till shutdown

# journalctl is a command-line utility in Linux used to query and view logs from the systemd journal. The systemd journal is a centralized logging system that collects and stores log messages from various services, daemons, and the kerne

####### Service Commands ######### 

systemctl start {service}
systermctl status {service}
systermctl enable {service}   ## Post shutdown/crash the server still it'll work 
systermctl reload {service}
systermctl stop {service}
systermctl disable {service}

sshd.service file will have 

mask/unmask : to kick-off one service from other service or not













 

